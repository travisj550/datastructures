Assignment #3        NO LATE ASSIGNMENTS ACCEPTED PLEASE.     
DUE 11 pm

Do problem 5.5 on pages 248-249 using Java (one file only--multiple classes ok).

The input will be a sequence of 3 ints entered from the keyboard
(separated only by one or more blanks), such as 7 1 3  as in problem 5.5.
This kind of input can be entered again and again until the user enters stop.

7 1 3 means that there are seven items:
1 2 3 4 5 6 7 (the numbering always starts at 1)
and that the holder  starts at 1
and that the passing is 3
so that means that the first one eliminated is 4
creating a new list
1 2 3 5 6 7
which now starts holding  at 5
and the next one eliminated is 1
creating a new list
2 3 5 6 7
which now starts holding at 2
and the next one eliminated is 6
creating a new list 2 3 5 7
which now starts holding at 7
and the next one eliminated is 5
creating a new list 2 3 7
which now starts holding at 7
and the next one eliminated is 7
creating a new list 2 3
which now starts holding at 2
and the next one eliminated is
3
creating the final list 2
IN ALL SITUATIONS THE FIRST NUMBER IN THE LIST IS 1.

When the user wants to stop the input, it should just be: stop
The user should be able to continue providing input after the problem is solved.
The output should be sent to the console (lower pane on jGrasp.)
Please note also that the first number could be an extremely large int. 
It might be fun to try a circular linked list in one class , an iterator in another,
and then the application itself, but the choice is yours. Try to learn from the concepts of the chapter!
JUST PRINT THE FINAL LIST OF A SINGLE int.


1.	turnin an electronic version of "bigone" (the file with the classes--unsharred) using
	$ turnin bigone kmartin.cop3530.a3

ONLY turnin the .java file...do not turnin any runs. Name your  file your n number.java.
DO NOT USE shar...

2.	check to see if the size of the file you saved is the same as the
	size of the file turned in

	$ turnin -c kmartin.cop3530.a3 (tells you how many
	bytes you have turned in--check against how
        many you have saved) 
    	$ ls -l
        (list with long option)


